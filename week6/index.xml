<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Week6s on Xtern Bootcamp 16</title>
    <link>http://replace-this-with-your-hugo-site.com/week6/index.xml</link>
    <description>Recent content in Week6s on Xtern Bootcamp 16</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Jun 2016 16:15:26 -0400</lastBuildDate>
    <atom:link href="http://replace-this-with-your-hugo-site.com/week6/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Authentication with NodeJS</title>
      <link>http://replace-this-with-your-hugo-site.com/week6/</link>
      <pubDate>Mon, 27 Jun 2016 16:15:26 -0400</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/week6/</guid>
      <description>

&lt;h3 id=&#34;week-6&#34;&gt;Week 6&lt;/h3&gt;

&lt;h1 id=&#34;authentication-with-nodejs&#34;&gt;Authentication with NodeJS&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>Day 25: Review</title>
      <link>http://replace-this-with-your-hugo-site.com/week6/day25/</link>
      <pubDate>Tue, 05 Jul 2016 15:37:48 -0400</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/week6/day25/</guid>
      <description>

&lt;p&gt;&lt;date&gt;Tuesday, July 5, 2016&lt;/date&gt;&lt;/p&gt;

&lt;h2 id=&#34;topics&#34;&gt;Topics&lt;/h2&gt;

&lt;h3 id=&#34;javascript&#34;&gt;JavaScript&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Hoisting - Function and variable declarations are always hoisted to the top of their containing scope by the JavaScript interpreter.  Variable assignments are not hoisted.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://javascriptweblog.wordpress.com/2010/07/06/function-declarations-vs-function-expressions/&#34;&gt;Function Declarations vs Function Expressions&lt;/a&gt; - A quick overview of hoisting with examples&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.adequatelygood.com/JavaScript-Scoping-and-Hoisting.html&#34;&gt;Scoping and Hoisting&lt;/a&gt; - A more in-depth look at scoping and hoisting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function foo() {
  bar();
  var x = 1;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Is interpreted as:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function foo() {
  var x;
  bar();
  x = 1;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;angularjs&#34;&gt;AngularJS&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;controllerAs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Factories&lt;/li&gt;
&lt;li&gt;Custom Directives

&lt;ul&gt;
&lt;li&gt;Default use is as attribute or element (as of Angular 1.3)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bindToController&lt;/code&gt; - binds isolate scope properties to controller for use with &lt;code&gt;controllerAs&lt;/code&gt; syntax&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Style

&lt;ul&gt;
&lt;li&gt;Function declarations over function expressions&lt;/li&gt;
&lt;li&gt;&lt;code&gt;activate()&lt;/code&gt; functions for resolving start-up logic for a controller&lt;/li&gt;
&lt;li&gt;Bindable / Accessible members up top&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;homework&#34;&gt;Homework&lt;/h2&gt;

&lt;p&gt;Continue working on refactor of Meganote.  If you need to start from a fresh copy, the repo in its current state can be cloned &lt;a href=&#34;https://github.com/xternbootcamp16/meganote/commit/2fcc8902aefb6a202adefb55f3d70bdc445166f1&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 26: Gulp</title>
      <link>http://replace-this-with-your-hugo-site.com/week6/day26/</link>
      <pubDate>Wed, 06 Jul 2016 14:18:59 -0400</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/week6/day26/</guid>
      <description>

&lt;p&gt;&lt;date&gt;Wednesday, July 6, 2016&lt;/date&gt;&lt;/p&gt;

&lt;h2 id=&#34;topics&#34;&gt;Topics&lt;/h2&gt;

&lt;h3 id=&#34;gulp-http-gulpjs-com&#34;&gt;&lt;a href=&#34;http://gulpjs.com/&#34;&gt;Gulp&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A JavaScript task runner that lets you automate repetitive tasks such as:

&lt;ul&gt;
&lt;li&gt;Concatenating JS files&lt;/li&gt;
&lt;li&gt;Refreshing the browser when a file is saved&lt;/li&gt;
&lt;li&gt;Bundling and minifying files&lt;/li&gt;
&lt;li&gt;Running unit tests&lt;/li&gt;
&lt;li&gt;And so much more!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://brandonclapp.com/what-is-gulp-js-and-why-use-it/&#34;&gt;What is Gulp.js and why use it?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.codefellows.org/blog/quick-intro-to-gulp-js&#34;&gt;Quick intro to Gulp.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;basic-setup&#34;&gt;Basic Setup&lt;/h3&gt;

&lt;p&gt;First, install Gulp globally if you don&amp;rsquo;t already have it on your machine&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install -g gulp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use &lt;code&gt;npm install&lt;/code&gt; to add Gulp and other plugins that you need to the dev dependencies of your project in &lt;code&gt;package.json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install --save-dev gulp gulp-concat gulp-plumber gulp-babel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add &lt;code&gt;gulpfile.js&lt;/code&gt; at the root level of your project and add references to the node modules you installed&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var gulp = require(&#39;gulp&#39;);
var concat = require(&#39;concat&#39;);
var plumber = require(&#39;plumber&#39;);
var babel = require(&#39;babel&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And now you&amp;rsquo;re ready to start writing Gulp tasks!&lt;/p&gt;

&lt;h3 id=&#34;gulp-plugins-used-in-meganote-so-far&#34;&gt;Gulp plugins used in Meganote (so far&amp;hellip;)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/gulp-concat&#34;&gt;&lt;code&gt;gulp-concat&lt;/code&gt;&lt;/a&gt; - Concatenates files&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/gulp-sourcemaps&#34;&gt;&lt;code&gt;gulp-sourcemaps&lt;/code&gt;&lt;/a&gt; - Maps concatenated / minified files back to original sources&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/gulp-plumber&#34;&gt;&lt;code&gt;gulp-plumber&lt;/code&gt;&lt;/a&gt; - Prevent pipe breaking caused by errors from Gulp plugins&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/gulp-babel&#34;&gt;&lt;code&gt;gulp-babel&lt;/code&gt;&lt;/a&gt; - Transpile ES6 to ES5&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/gulp-connect&#34;&gt;&lt;code&gt;gulp-connect&lt;/code&gt;&lt;/a&gt; - Run a webserver with live reloading&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/gulp-order&#34;&gt;&lt;code&gt;gulp-order&lt;/code&gt;&lt;/a&gt; - Order a stream of files&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;projects&#34;&gt;Projects&lt;/h2&gt;

&lt;p&gt;Meganote: &lt;a href=&#34;https://github.com/xternbootcamp16/meganote/tree/4cde223e83105c2a49530161a1a9779aaecbaad8&#34;&gt;Morning&lt;/a&gt; | &lt;a href=&#34;https://github.com/xternbootcamp16/meganote/tree/8f13a322ccafd0afa43146f1229c387cd737c358&#34;&gt;Afternoon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Meganote-server: &lt;a href=&#34;https://github.com/xternbootcamp16/meganote-server/tree/a8125a986c42db2308a5559ebad84e72559eca3e&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 27: ECMAScript 6</title>
      <link>http://replace-this-with-your-hugo-site.com/week6/day27/</link>
      <pubDate>Thu, 07 Jul 2016 14:52:33 -0400</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/week6/day27/</guid>
      <description>

&lt;p&gt;&lt;date&gt;Thursday, July 7, 2016&lt;/date&gt;&lt;/p&gt;

&lt;h2 id=&#34;topics&#34;&gt;Topics&lt;/h2&gt;

&lt;h3 id=&#34;exploring-es6-http-exploringjs-com-es6-index-html-toc-ch-first-steps&#34;&gt;&lt;a href=&#34;http://exploringjs.com/es6/index.html#toc_ch_first-steps&#34;&gt;Exploring ES6&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;A free eBook with tons of information about the new version of JavaScript.  A good place to start is &lt;a href=&#34;http://exploringjs.com/es6/ch_first-steps.html&#34;&gt;Chapter 4 - First steps with ECMAScript 6&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;new-features-of-ecmascript-6-used-in-class&#34;&gt;New features of ECMAScript 6 used in class&lt;/h3&gt;

&lt;p&gt;Block scoping - Great article &lt;a href=&#34;https://www.sitepoint.com/joys-block-scoping-es6/&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;let&lt;/code&gt; for block-scoped variables without hoisting&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const&lt;/code&gt; for immutable variables&lt;/li&gt;
&lt;li&gt;Block-scoped functions - no need for IIFE&amp;rsquo;s!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Arrow functions&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Old way
numbers.map(function(x) { return x + 1; });

// ES6 way
numbers.map(x =&amp;gt; { x + 1 })
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lexical scoping of &lt;code&gt;this&lt;/code&gt; - article &lt;a href=&#34;https://toddmotto.com/es6-arrow-functions-syntaxes-and-lexical-scoping/&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Old way
this.nums.forEach(function(x) {
  if (x === 1)
    this.ary.push(x);
}.bind(this));

// ES6 way
this.nums.forEach(x =&amp;gt; {
  if (x === 1)
    this.ary.push(x)
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;String interpolation&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Old way
var message = &amp;quot;Hello, &amp;quot; + person.name + &amp;quot;,\n&amp;quot; +
&amp;quot;It is &amp;quot; + destination.distance + &amp;quot; miles to &amp;quot; + destination.place + &amp;quot;.&amp;quot;

// ES6 way
let message = `Hello, ${person.name},
It is ${destination.distance} miles to ${destination.place}.`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Object property shorthand&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Old way
obj = { x: x, y: y };

// ES6 way
obj = { x, y }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Classes&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;class Example {
  constructor (a, b) {
    this.a = a
    this.b = b
  }
  otherFunction (x) {
    return x * 5
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;projects&#34;&gt;Projects&lt;/h2&gt;

&lt;p&gt;Meganote: &lt;a href=&#34;https://github.com/xternbootcamp16/meganote/tree/d254cc0b6903d42cc341cf36bb712f0f12b13bf1&#34;&gt;Morning&lt;/a&gt; | &lt;a href=&#34;https://github.com/xternbootcamp16/meganote/tree/ff163bfb68caf00240a345426be033e86b60da92&#34;&gt;Afternoon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Meganote-server: &lt;a href=&#34;https://github.com/xternbootcamp16/meganote-server/tree/1bb67a3998459268681a21fb0f67c6572554a572&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;homework&#34;&gt;Homework&lt;/h2&gt;

&lt;p&gt;Modify your Meganote Server to allow it to create users&lt;/p&gt;

&lt;h4 id=&#34;base-requirement&#34;&gt;Base Requirement:&lt;/h4&gt;

&lt;p&gt;Save users without passwords&lt;/p&gt;

&lt;h4 id=&#34;super-mega-bonus-credit&#34;&gt;Super Mega Bonus Credit:&lt;/h4&gt;

&lt;p&gt;Verify that the password and password confirmation match before saving the user (still don&amp;rsquo;t save the password, though)&lt;/p&gt;

&lt;h4 id=&#34;super-mega-bonus-credit-hyperfighting&#34;&gt;Super Mega Bonus Credit Hyperfighting:&lt;/h4&gt;

&lt;p&gt;Store &lt;em&gt;encrypted&lt;/em&gt; passwords using &lt;code&gt;bcryptjs&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 28: User Authentication</title>
      <link>http://replace-this-with-your-hugo-site.com/week6/day28/</link>
      <pubDate>Fri, 08 Jul 2016 13:08:42 -0400</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/week6/day28/</guid>
      <description>

&lt;p&gt;&lt;date&gt;Friday, July 8, 2016&lt;/date&gt;&lt;/p&gt;

&lt;h2 id=&#34;topics&#34;&gt;Topics&lt;/h2&gt;

&lt;h3 id=&#34;bcrypt&#34;&gt;bcrypt&lt;/h3&gt;

&lt;p&gt;bcrypt is a password hashing function based on the Blowfish cipher, developed in 1999.&lt;/p&gt;

&lt;h4 id=&#34;key-features&#34;&gt;Key features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;It is an &lt;strong&gt;adaptive function&lt;/strong&gt;, meaning the iteration count can be increased to counteract increases in computing power.  As computers get more powerful, the difficulty of reversing the encryption can be increased.&lt;/li&gt;
&lt;li&gt;Utilizes a &lt;strong&gt;salt&lt;/strong&gt;, random data used as an additional input to a hashing function.  This helps prevent &lt;a href=&#34;https://en.wikipedia.org/wiki/Rainbow_table&#34;&gt;rainbow-table attacks&lt;/a&gt; - attacks using a pre-computed table for reversing cryptographic hash functions.&lt;/li&gt;
&lt;li&gt;Identify bcrypt hashes easily - they all start with &amp;ldquo;$2a$&amp;rdquo;, &amp;ldquo;$2b$&amp;rdquo;, or &amp;ldquo;$2y$&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;notices tip&#34; &gt;&lt;p&gt;Never, EVER store plain-text user passwords in your database. Always encrypt.   Read &lt;a href=&#34;http://dustwell.com/how-to-handle-passwords-bcrypt.html&#34;&gt;Storing user passwords securely: hashing, salting, and bcrypt&lt;/a&gt; for a great explanation.&lt;/p&gt;
&lt;/div&gt;


&lt;h3 id=&#34;bcryptjs-https-www-npmjs-com-package-bcryptjs&#34;&gt;&lt;a href=&#34;https://www.npmjs.com/package/bcryptjs&#34;&gt;bcryptjs&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Optimized bcrypt in plain JavaScript with zero dependencies&lt;/p&gt;

&lt;p&gt;How to get started:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install bcryptjs
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var bcrypt = require(&#39;bcryptjs&#39;);
var salt = bcrypt.genSaltSync(10); // parameter is the number of rounds to use
var hash = bcrypt.hashSync(&#39;plain_text_password&#39;, salt);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;projects&#34;&gt;Projects&lt;/h2&gt;

&lt;p&gt;Meganote:  &lt;a href=&#34;https://github.com/xternbootcamp16/meganote/tree/e527d75025d4357af527f47adc652b7acb396f2c&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Meganote-server: &lt;a href=&#34;https://github.com/xternbootcamp16/meganote-server/tree/f1b26abb35938831bddcfaed45307f041d99a047&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;homework&#34;&gt;Homework&lt;/h2&gt;

&lt;p&gt;User authentication and persistence in Meganote&lt;/p&gt;

&lt;h4 id=&#34;base-requirements&#34;&gt;Base Requirements&lt;/h4&gt;

&lt;p&gt;If user is signed out, display a link to &amp;lsquo;Sign Up&amp;rsquo; in the navbar&lt;/p&gt;

&lt;p&gt;If user is signed in, display a link to &amp;lsquo;Sign Out&amp;rsquo; instead (and have it work). Also, display the current user&amp;rsquo;s name in the navbar&lt;/p&gt;

&lt;h4 id=&#34;super-mega-bonus-credit&#34;&gt;Super Mega Bonus Credit&lt;/h4&gt;

&lt;p&gt;Use custom directives to fulfill the base requirements&lt;/p&gt;

&lt;h4 id=&#34;super-mega-bonus-credit-hyper-fighting&#34;&gt;Super Mega Bonus Credit Hyper Fighting&lt;/h4&gt;

&lt;p&gt;Create a working profile page where you can update a user&amp;rsquo;s profile&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>